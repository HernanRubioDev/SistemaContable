CREATE TABLE users ( 
	id_user SERIAL PRIMARY KEY, 
	name VARCHAR(40) NOT NULL, 
	last_name VARCHAR(40) NOT NULL, 
	email VARCHAR(80) NOT NULL UNIQUE, 
	password VARCHAR(60) NOT NULL
	);

CREATE TABLE roles (
	id_rol SERIAL PRIMARY KEY,
	rol_name VARCHAR(20) NOT NULL UNIQUE
);

CREATE TABLE users_roles (
	id_rol INTEGER NOT NULL, 
	id_user INTEGER NOT NULL,
	FOREIGN KEY (id_user) REFERENCES users(id_user) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (id_rol) REFERENCES roles(id_rol) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (id_rol, id_user)
);

CREATE TABLE users_sessions(
	id_session SERIAL PRIMARY KEY,
	auth_token VARCHAR(60) NOT NULL,
	id_user INTEGER NOT NULL,
	last_login DATE NOT NULL,
	expiration_date DATE NOT NULL,
	user_ip VARCHAR NOT NULL UNQIE,
	FOREIGN KEY (id_user) REFERENCES users(id_user) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE accounts ( 
id_account SERIAL PRIMARY KEY, 
name VARCHAR(30) NOT NULL UNIQUE, 
recive_credit BOOLEAN NOT NULL,
code VARCHAR(5) NOT NULL UNIQUE,
account_type VARCHAR(2) NOT NULL CHECK (account_type IN ('A','P','R+','R-')),
date_creation DATE NOT NULL,
id_user INTEGER NOT NULL, FOREIGN KEY (id_user) REFERENCES users(id_user),
partial_credit FLOAT DEFAULT 0 CHECK (partial_credit >= 0)
);

CREATE TABLE lines (
  id_line SERIAL PRIMARY KEY,
  id_account INTEGER NOT NULL REFERENCES accounts(id_account),
  move_type VARCHAR(50) NOT NULL,
  line_amount DECIMAL(10,2) NOT NULL
);

CREATE TABLE moves (
	id_move SERIAL PRIMARY KEY,
	move_date DATE NOT NULL,
	description VARCHAR(80) NOT NULL
);

CREATE TABLE moves_lines (
  id_move INTEGER NOT NULL REFERENCES moves(id_move),
  id_line INTEGER NOT NULL REFERENCES lines(id_line),
  CONSTRAINT id_move_line PRIMARY KEY (id_move, id_line)
);